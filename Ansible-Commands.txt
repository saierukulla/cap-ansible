execute playbooks with SSH Keys Configured to target hosts
============================================================
how to run a ansible playbook  ( default invenotry )

	ansible-playbook myplaybook.yml 

how to run ansible playbook with custom inventory

	ansible-playbook -i /path/to/inventory myplaybook.yml

how to run ansible playbook with super user (root)

        ansible-playbook -i /path/to/inventory myplaybook.yml



execute playbooks with No SSH Keys Configured to target hosts
==============================================================
how to run a ansible playbook  ( default invenotry ) with uid/pwd

	ansible-playbook myplaybook.yml -u username -k 

how to run ansible playbook with custom inventory with uid/pwd

	ansible-playbook myplaybook.yml -i /path/to/inventory -u username -k 

how to run ansible playbook with super user (root) with uid/pwd

        ansible-playbook myplaybook.yml -i /path/to/inventory -u username -kK





Ansible Ad-Hoc Commands to use when SSH Keys configured with target hosts:
===========================================================================
how to run ansible ad-hoc commands ( default inventory )

	ansible all -m setup
        ansible qa -m ping
        ansible dev -m shell -a "free -m"
        ansible iat -m copy -a "src=/tmp/naresh.txt dest=/tmp"
        ansible prod -m file -a "path=/tmp/helousername.txt state=touch"

how to run ansible ad-hoc with custom inventory

	ansible all -i /path/to/inventory ping
        ansible dev -i /path/to/inventory -m copy -a "src=/tmp/new.txt dest=/tmp"

how to run ansible ad-hoc with super user (root)

        ansible all -i /path/to/inventory -b ping
        ansible dev -i /path/to/inventory -m copy -a "src=/tmp/new.txt dest=/tmp" -b
Ansible Ad-Hoc Commands to use when No SSH Keys configured with target hosts:
==============================================================================
how to run ansible ad-hoc commands ( default inventory ) with uid/pwd

	ansible all -m setup -u username -k 
        ansible qa -m ping -u username -k
        ansible dev -m shell -a "free -m" -u username -k
        ansible iat -m copy -a "src=/tmp/naresh.txt dest=/tmp" -u username -k 
        ansible prod -m file -a "path=/tmp/helousername.txt state=touch" -u username -k

how to run ansible ad-hoc with custom inventory & uid/pwd

	ansible all -i /path/to/inventory -u username -k
        ansible dev -i /path/to/inventory -m copy -a "src=/tmp/new.txt dest=/tmp" -u username -k

how to run ansible ad-hoc with super user (root) with uid/pwd

        ansible all -i /path/to/inventory -b -u username -k -K
        ansible dev -i /path/to/inventory -m copy -a "src=/tmp/new.txt dest=/tmp" -b -u username -k -K


================================================================================================================
playbook syntax

---
- hosts: all
  become: yes
  tasks:
    - name: ensure nginx is at the latest version
      apt: 
        name: nginx 
        state: latest
    - name: copy the content of the web site
      shell: echo "hi there, Ansible is Cool" > "/var/www/html/index.html"
    - name: start nginx
      service:
          name: nginx
          state: restarted



================================================================================
[root@localhost ~]# cat register.yml 
---
- hosts: localhost
  gather_facts: no
  tasks:
  - name: starting httpd
    service: name=httpd state=started enabled=yes
 
  - name: httpd status
    command: service httpd status
    register: httpd_status  
  
  - name: httpd status output
    debug:
      var: httpd_status
=================================================================================================================
ansible-galaxy init <role-name> ---these command will initilized the directory with the given rolename
ansible-galaxy role init <role-name>

files===This directory contains regular files that need to be transferred to the hosts you are configuring for this role. 
This may also include script files to run. Basically this is used for static file transfer.

handlers====All handlers that were in your playbook previously can now be added into this directory.

meta===This directory can contain files that establish role dependencies. 
You can list roles that must be applied before the current role can work correctly.

templates===You can place all files that use variables to substitute information during creation in this directory. 
Basically this is used for dynamic file transfer.

tasks===This directory contains all of the tasks that would normally be in a playbook. 
These can reference files and templates contained in their respective directories without using a path.

defaults===Variables for the roles can be specified in this directory and used in your configuration files. 
Variables in defaults have the lowest priority of any variables available, which means they’re easy to override.

vars===Variables for the roles can be specified in this directory and used in your configuration files.  
Variables in vars have a higher priority, which means that they are more difficult to override.

What is “idempotency”?
A: Idempotency is an important Ansible feature. It prevents unnecessary changes in the managed hosts. 
With idempotency, you can execute one or more tasks on a server as many times as you need to, 
but it won’t change anything that’s already been modified and is working correctly. 
To put it in basic terms, the only changes added are the ones needed and not already in place.


================================================================================================================

url: https://www.decodingdevops.com/ansible-register-module-with-examples/